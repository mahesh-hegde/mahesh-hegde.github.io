<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithms on Mahesh's Blog</title><link>https://mahesh-hegde.github.io/tags/algorithms/</link><description>Recent content in Algorithms on Mahesh's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 20 Mar 2023 11:03:56 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode #995: Minimum number of K bit flips</title><link>https://mahesh-hegde.github.io/posts/leetcode_995/</link><pubDate>Mon, 20 Mar 2023 11:03:56 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/leetcode_995/</guid><description>This is my solution and logic for Problem 995 on Leetcode. This is actually copy of solution I posted on discussion forums.
I find it a little hard to get the initial intuition &amp;amp; optimization from O(nk) to O(n), and as usual, other solution posts are very terse. So I thought it is worth to explain a little more.
Problem statement You are given a binary array nums and an integer k.</description></item></channel></rss>