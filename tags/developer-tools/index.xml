<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developer Tools on Loop Invariant</title><link>https://mahesh-hegde.github.io/tags/developer-tools/</link><description>Recent content in Developer Tools on Loop Invariant</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 24 Oct 2023 15:31:43 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/developer-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Ephemeral MySQL for local testing using Docker Compose</title><link>https://mahesh-hegde.github.io/posts/mysql_local_using_compose/</link><pubDate>Tue, 24 Oct 2023 15:31:43 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/mysql_local_using_compose/</guid><description>Why? Many times tests are run against a simple database like H2 or SQLite, whereas production uses a heavier DB like MySQL. However, its many times desirable to run testing with the real DB. For example, when the application makes use of DB-specific features or quirks, it&amp;rsquo;s required for proper testing.
Once upon a time it took long time to setup MySQL through distribution package manager, and tests ideally need ephemeral environments.</description></item><item><title>Building jnigen - A Java bindings generator for Dart</title><link>https://mahesh-hegde.github.io/posts/building_jnigen/</link><pubDate>Wed, 19 Jul 2023 19:11:21 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/building_jnigen/</guid><description>Caine: Then why bother?
John: Maybe I am wrong.
John Wick 4, (2023)
It&amp;rsquo;s been a long overdue to write a post about my past year&amp;rsquo;s Google Summer of Code (GSoC) project. jnigen is an experimental bindings generator which aims to provide Java interoperability for Dart. It works by generating wrappers which call JNI through Dart&amp;rsquo;s FFI (Foreign Function Interface).
I developed the initial versions of this package under the guidance of Daco Harkes and Liam Appelbe from Dart team.</description></item><item><title>Running PostgreSQL locally for back-end development using Docker</title><link>https://mahesh-hegde.github.io/posts/postgres_local_using_docker/</link><pubDate>Sat, 13 May 2023 11:36:39 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/postgres_local_using_docker/</guid><description>When doing back-end development or just fiddling with SQL, installing postgres the traditional way may not be very convenient for many reasons. This post describes how to run postgres for local development using docker and docker compose.
One important advantage for me is getting the latest version of postgres, since I tend to use a stable linux distribution.
There&amp;rsquo;s already some amount of documentation for postgresql official docker image. But few things are less than obvious if you&amp;rsquo;re a beginner like me.</description></item></channel></rss>