<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flutter on Loop Invariant</title><link>https://mahesh-hegde.github.io/tags/flutter/</link><description>Recent content in Flutter on Loop Invariant</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 19 Jul 2023 19:11:21 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/flutter/index.xml" rel="self" type="application/rss+xml"/><item><title>Building jnigen - A Java bindings generator for Dart</title><link>https://mahesh-hegde.github.io/posts/building_jnigen/</link><pubDate>Wed, 19 Jul 2023 19:11:21 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/building_jnigen/</guid><description>&lt;blockquote>
&lt;blockquote>
&lt;p>Caine: Then why bother?&lt;/p>
&lt;p>John: Maybe I am wrong.&lt;/p>&lt;/blockquote>
&lt;p>John Wick 4, (2023)&lt;/p>&lt;/blockquote>
&lt;p>It&amp;rsquo;s been a long overdue to write a post about my past year&amp;rsquo;s Google Summer of Code (GSoC) project. &lt;a href="https://github.com/dart-lang/jnigen">jnigen&lt;/a> is an experimental bindings generator which aims to provide Java interoperability for Dart. It works by generating wrappers which call JNI through Dart&amp;rsquo;s FFI (Foreign Function Interface).&lt;/p>
&lt;p>I developed the initial versions of this package under the guidance of Daco Harkes and Liam Appelbe from Dart team. Hossein Yousefi from Dart team is developing the project further, adding many features such as Generics and Kotlin language support.&lt;/p></description></item></channel></rss>