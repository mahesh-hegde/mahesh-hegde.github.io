<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Debugging on Loop Invariant</title><link>https://mahesh-hegde.github.io/tags/debugging/</link><description>Recent content in Debugging on Loop Invariant</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 19 Feb 2025 10:18:17 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/debugging/index.xml" rel="self" type="application/rss+xml"/><item><title>Jumping to VSCode Debugger from IPython</title><link>https://mahesh-hegde.github.io/posts/vscode-ipython-debugging/</link><pubDate>Wed, 19 Feb 2025 10:18:17 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/vscode-ipython-debugging/</guid><description>&lt;p>Debuggers and REPL (Interactive prompt / intepreter) are invaluable development tools. They serve mostly complimentary functions.&lt;/p>
&lt;p>A Debugger is most useful to run a program and inspect program state in between. In contrast, an REPL is most useful to try out standard library functions when developing, and try out your own functions too without needing to establish an end-to-end flow (such as an API endpoint or a subcommand). It&amp;rsquo;s especially useful when your functions have complex inputs or outputs, since it allows to express them in the syntax of the host programming language.&lt;/p></description></item><item><title>A tale of Interface Smuggling in Go net/http</title><link>https://mahesh-hegde.github.io/posts/go-interface-smuggling/</link><pubDate>Fri, 01 Mar 2024 18:59:00 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/go-interface-smuggling/</guid><description>&lt;h2 id="the-humble-beginnings">The humble beginnings&lt;/h2>
&lt;p>Once upon a time, I had a use case for serving the contents inside of a zip file over HTTP, preferably without unpacking the &lt;code>.zip&lt;/code> to a temporary directory.&lt;/p>
&lt;p>Go is a language made for writing HTTP servers. Since we can represent zip file as a filesystem &lt;code>fs.FS&lt;/code>, how hard would it be to write a file server to serve files from it?&lt;/p>
&lt;p>Well, it was harder than I thought.&lt;/p></description></item></channel></rss>