<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Loop Invariant</title><link>https://mahesh-hegde.github.io/tags/python/</link><description>Recent content in Python on Loop Invariant</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 19 Feb 2025 10:18:17 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Jumping to Debugger from IPython REPL in VSCode</title><link>https://mahesh-hegde.github.io/posts/vscode-ipython-debugging/</link><pubDate>Wed, 19 Feb 2025 10:18:17 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/vscode-ipython-debugging/</guid><description>&lt;p>Debuggers and REPL (Interactive prompt / intepreter) are invaluable development tools. They serve mostly complimentary functions.&lt;/p>
&lt;p>A Debugger is most useful to run a program and inspect program state in between. In contrast, an REPL is most useful to try out standard library functions when developing, and try out your own functions too without needing to establish an end-to-end flow (such as an API endpoint or a subcommand). It&amp;rsquo;s especially useful when your functions have complex inputs or outputs, since it allows to express them in the syntax of the host programming language.&lt;/p></description></item></channel></rss>