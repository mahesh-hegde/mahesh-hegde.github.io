<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTTP on Mahesh's Blog</title><link>https://mahesh-hegde.github.io/tags/http/</link><description>Recent content in HTTP on Mahesh's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 01 Mar 2024 18:59:00 +0530</lastBuildDate><atom:link href="https://mahesh-hegde.github.io/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>A tale of Interface Smuggling in Go net/http</title><link>https://mahesh-hegde.github.io/posts/go-interface-smuggling/</link><pubDate>Fri, 01 Mar 2024 18:59:00 +0530</pubDate><guid>https://mahesh-hegde.github.io/posts/go-interface-smuggling/</guid><description>The humble beginnings Once upon a time, I had a use case for serving the contents inside of a zip file over HTTP, preferably without unpacking the .zip to a temporary directory.
Go is a language made for writing HTTP servers. Since we can represent zip file as a filesystem fs.FS, how hard would it be to write a file server to serve files from it?
Well, it was harder than I thought.</description></item></channel></rss>